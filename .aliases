# Some aliases {{{
alias p="pass"
alias SS="sudo systemctl"
alias v="${EDITOR}"
alias sv="sudo ${EDITOR}"
alias r="ranger"
alias sr="sudo ranger"
alias ka="killall"
alias g="git"
alias trem="transmission-remote"
alias mkd="mkdir -pv"
alias take="mkcd"
alias ref="source ~/.zshrc" # Refresh shortcuts manually and reload bashrc
alias bw="wal -i ~/.config/wall.png" # Rerun pywal
alias pi="bash ~/.larbs/wizard/wizard.sh"
function gi() { curl -L -s https://www.gitignore.io/api/$@ ; } # gitignore.io
function sort-by-length() { awk '{ print length, $0 }' | sort -n -s | cut -d' '  -f2- }
# }}}
# Adding color {{{
# alias ls='ls -hN --color=auto --group-directories-first'
alias grep="grep --color=auto" # Color grep - highlight desired sequence.
alias ccat="highlight --out-format=ansi" # Color cat - print file with syntax highlighting.
# }}}
# Internet {{{
alias yt="youtube-dl --add-metadata -ic" # Download video link
alias yta="yt -x -f bestaudio/best" # Download only audio
alias YT="youtube-viewer"
alias ethspeed="speedometer -r enp0s25"
alias wifispeed="speedometer -r wlp3s0"
alias starwars="telnet towel.blinkenlights.nl"
# }}}
# TeX {{{
alias Txa="cp ~/Documents/LaTeX/article.tex"
alias Txs="cp ~/Documents/LaTeX/beamer.tex"
alias Txh="cp ~/Documents/LaTeX/handout.tex"
# }}}

# Dotfiles {{{
gdots() {
  APPS=(~/.calcurse ~/ledger ~/notes ~/.tmuxinator ~/code/tonietto/dotfiles);
  for APP in $APPS; do
  echo "git $*"ing $APP.. && \
  git -C $APP "$*" || notify-send gdots "$APP had an error"
  ; done ;
  echo "git $*"ing pass.. && \
  pass git "$*" || notify-send gdots "$APP had an error"
  echo Done!
}
#}}}
# Kubernetes aliases {{{
alias kb="kubectl"
#}}}
# Docker aliases {{{
alias dcomp="docker-compose"
alias dcu="docker-compose up"
alias dcud="docker-compose up -d"
alias dclf="docker-compose logs -f"
function dsul() { docker-compose stop $* && docker-compose up -d $* && docker-compose logs -f --tail 300 $* }
#}}}
# FZF {{{
# opening files
#   - CTRL-O to open with `open` command,
#   - CTRL-E or Enter key to open with the $EDITOR
fo() (
  IFS=$'\n' out=("$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-vim} "$file"
  fi
)

# fdbr - delete git branch (including remote branches), sorted by most recent commit, limit 30 last branches
fdbr() {
  local branches branch
  branches=$(git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)") &&
  branch=$(echo "$branches" |
  fzf-tmux -d $(( 2 + $(wc -l <<< "$branches")  )) +m) &&
  git branch -d $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}

# fbr - checkout git branch (including remote branches), sorted by most recent commit, limit 30 last branches
fbr() {
  local branches branch
  branches=$(git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)") &&
  branch=$(echo "$branches" |
  fzf-tmux -d $(( 2 + $(wc -l <<< "$branches")  )) +m) &&
  git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
}
function cd() {
    if [[ "$#" != 0 ]]; then
        builtin cd "$@";
        return
    fi
    while true; do
        local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
        local dir="$(printf '%s\n' "${lsd[@]}" |
            fzf --reverse --preview '
                __cd_nxt="$(echo {})";
                __cd_path="$(echo $(pwd)/${__cd_nxt} | sed "s;//;/;")";
                echo $__cd_path;
                echo;
                ls -p --color=always "${__cd_path}";
        ')"
        [[ ${#dir} != 0 ]] || return 0
        builtin cd "$dir" &> /dev/null
    done
}
# tm - create new tmux session, or switch to existing one. Works from within tmux too. (@bag-man)
# `tm` will allow you to select your tmux session via fzf.
# `tm irc` will attach to the irc session (if it exists), else it will create it.
tm() {
  [[ -n "$TMUX" ]] && change="switch-client" || change="attach-session"
  if [ $1 ]; then
    tmux $change -t "$1" 2>/dev/null || (tmux new-session -d -s $1 && tmux $change -t "$1"); return
  fi
  session=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf --exit-0) &&  tmux $change -t "$session" || echo "No sessions found."
}
# Install (one or multiple) selected application(s)
# using "brew search" as source input
# mnemonic [B]rew [I]nstall [P]lugin
bip() {
  local inst=$(brew search | fzf -m)

  if [[ $inst ]]; then
    for prog in $(echo $inst);
    do; brew install $prog; done;
  fi
}
# Update (one or multiple) selected application(s)
# mnemonic [B]rew [U]pdate [P]lugin
bup() {
  local upd=$(brew leaves | fzf -m)

  if [[ $upd ]]; then
    for prog in $(echo $upd);
    do; brew upgrade $prog; done;
  fi
}
# Delete (one or multiple) selected application(s)
# mnemonic [B]rew [C]lean [P]lugin (e.g. uninstall)
bcp() {
  local uninst=$(brew leaves | fzf -m)

  if [[ $uninst ]]; then
    for prog in $(echo $uninst);
    do; brew uninstall $prog; done;
  fi
}
# Select a docker container to start and attach to
function da() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -1 -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker start "$cid" && docker attach "$cid"
}
# Select a running docker container to stop
function ds() {
  local cid
  cid=$(docker ps | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker stop "$cid"
}
# Select a docker container to remove
function drm() {
  local cid
  cid=$(docker ps -a | sed 1d | fzf -q "$1" | awk '{print $1}')

  [ -n "$cid" ] && docker rm "$cid"
}
# }}}
# fff {{{
alias F="fff"
alias nff="npf run"
#}}}
# Github {{{
alias prs='hub pr checkout $(set -- $(hub pr list | fzf) && echo $1 | tr -d \#)'
alias pro='hub pr show $(set -- $(hub pr list | fzf) && echo $1 | tr -d \#)'
#}}}
# Git {{{
alias pushup='git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)'
alias git='hub'
alias gM='git merge'
alias ga='git add'
alias gb='fbr'
alias gbm='git branch -m'
alias gbD='git branch -D'
alias gbd='fdbr'
alias gc!='git commit --amend'
alias gcn!='git commit -n --amend'
alias gc='git commit'
alias gcn='git commit -n'
alias gcb='git checkout -b'
alias gcm='git checkout master'
alias gcd='git checkout dev'
alias gco='git checkout'
alias gd='git diff'
alias gf='git fetch'
alias gfb='git fetch $(git rev-parse --symbolic-full-name --abbrev-ref @{upstream} | sed "s!/! !")'
alias gl='git pull'
alias glo='git checkout master && git pull origin master && git checkout dev && git pull origin dev'
alias gm='git merge --no-ff'
alias gmm='git merge --no-ff master'
alias gp='git push'
alias gs='git switch'
alias gst='git status'
alias tst='tig status'
alias t='tig'
gsc(){ git fetch && git switch -c $1 origin/master }
# }}}
# Git Flow {{{
alias gfli='git flow init'
alias gflhs='git flow hotfix start'
alias gflhf='git flow hotfix finish'
alias gflrs='git flow release start'
alias gflrf='git flow release finish'
alias gflfs='git flow feature start'
alias gflff='git flow feature finish'
# gflbs() { git checkout -b bugfix/$1 }
#}}}
# Navigation {{{
alias c='clear'
alias cb='xclip -selection clipboard'
alias cl='cd ~/.calcurse && c && figlet CALENDAR | lolcat && echo ----------------- && echo Today is $(date +%m/%d/%y) && echo ----------------- && echo "" && calcurse -r3 && notify-send "Appointments for today" "$(calcurse -r1)"'
alias cs='clear && show-version'
alias ds='du -h ./ | sort -rh | head -n 1' # show this directory size
alias ..-='cd ../ && cd -'
alias N='nnn'
alias ddg='w3m http://duckduckgo.com'
#}}}
# Notes {{{
n() { $EDITOR ~/notes/"$*" }
nls() { ls -c ~/notes/ | grep "$*" }
ntree() { tree --noreport ~/notes/ }
nsearch() { tree --noreport -P "*$**" ~/notes/ }
nr() { ranger ~/notes/"$*" }
ngit() { git -C ~/notes/ "$*" }

compdef '_path_files -W ~/notes && return 0 || return 1' n
compdef '_path_files -W ~/notes && return 0 || return 1' nr
#}}}
# Shortcuts {{{
alias k='ls -lh'
alias l='ledger'
alias lr='ledger --price-db ~/ledger/definicoes/prices.db --market r'
alias lb='ledger --price-db ~/ledger/definicoes/prices.db --market b'
alias R='R --quiet'
alias showip="ipconfig getifaddr en0"
alias ts='tasks'
alias vat='vimcat'
alias pue='pass unlock && exit'
alias pul='pass unlock && encfs -i 60 ~/.ledger ~/ledger'
alias pu='pass unlock'
alias S='show-version && show-node && show-git-status 2&> /dev/null'
alias firefox='open -a Firefox'
alias chromium='open -a "Google Chrome"'
alias vr='v -c RangerChooser'
alias frotz='frotz -d'
#}}}
# Suspend and exit {{{
alias suspend='xset dpms force off' # Ubuntu specific
alias bye="clear && figlet BYE! | lolcat && revolver -s arrow2 start && sleep 5 && exit"
#}}}
# Yarn {{{
alias y='yarn'
#}}}
# FPP {{{
alias fpp="fpp -c 'vim -p -c tabo'"
#}}}
# Tmux/tmuxinator {{{
alias ta='tmux attach -t'
alias tnew='tmux new -s'
alias tls='tmux ls'
alias tkill='tmux kill-session -t'
alias tlay='tmux-layout'
alias mux='tmuxinator'
#}}}

# vim:foldmethod=marker:foldlevel=0:syntax=zsh
